{"version":3,"sources":["Config/firebase.js","pages/LoginPage/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","components/Toolbar/Toolbar.jsx","pages/Layout/ChatContainer/Sidebar/ChatItem/ChatItem.jsx","components/Modal/Modal.jsx","pages/Layout/ChatContainer/Sidebar/Sidebar.jsx","pages/Layout/ChatContainer/ChatRoom/ChatBox/ChatBubble/ChatBubble.jsx","pages/Layout/ChatContainer/ChatRoom/ChatBox/ChatBox.jsx","pages/Layout/ChatContainer/ChatRoom/InfoBox/InfoBox.jsx","pages/Layout/ChatContainer/ChatRoom/ChatRoom.jsx","pages/Layout/ChatContainer/ChatContainer.jsx","pages/Layout/SettingContainer/SettingContainer.jsx","pages/DashboardPage/DashboardPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","LoginForm","history","useHistory","useState","step","setStep","user","setUser","name","setName","valid","setValid","setError","userRef","firestore","collection","useEffect","where","get","then","docs","empty","checkValid","className","Button","onClick","provider","signInWithPopup","res","doc","uid","data","push","catch","err","console","log","type","autoComplete","spellCheck","placeholder","value","onChange","e","target","length","style","position","bottom","newUser","email","userName","favouriteChat","avatarUrl","set","handle_registerName","LoginPage","Toolbar","to","icon","faCommentAlt","faCog","signOut","faSignOutAlt","ChatItem","props","lastMsg","setLastMsg","db","id","orderBy","limit","forEach","msg","onSnapshot","snapshot","docChanges","change","src","chatIcon","chatroomTitle","Modal","error","chatTitle","setChatTitle","chatDescription","setChatDescription","setIsOpen","action","htmlFor","spellcheck","rows","add","admin","createDate","Date","like","description","Sidebar","isOpen","isLoading","setIsLoading","chatroomList","setChatroomList","isRefresh","currentUser","newList","includes","getChatroomList","faPlusCircle","map","chatroom","ChatBubble","sentTime","time","seconds","currentTime","getTime","ago","Math","abs","getHours","getMinutes","ceil","formatTime","flexDirection","isMe","sender","substring","alt","background","color","ChatBox","params","useParams","setID","message","setMessage","dialog","setDialog","frame","document","getElementById","newDialog","unshift","getDialog","changes","currentDialog","find","concat","scrollTop","scrollHeight","d","indexOf","getMonth","getDate","getFullYear","undefined","sendMessage","faPaperPlane","InfoBox","chatRoom","setAdmin","faArrowLeft","ref","delete","faTrashAlt","ChatRoom","useLocation","setChatRoom","liked","setLiked","isChange","setIsChange","likeList","setLikeList","update","emtpy","filter","faHeart","faInfoCircle","ChatContainer","SettingContainer","isValid","setIsValid","setLength","getUser","DashboardPage","path","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"whBAaMA,G,YAAWC,IAASC,cATL,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBACnBC,MAAO,gDAKIC,EAAiB,IAAIR,IAASS,KAAKC,mBAGjCX,GAFKA,EAASU,OAEdV,G,eCiKAY,MA1Kf,WAEI,IAAMC,EAAUC,cAEhB,EAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,oBAAS,GAAnC,mBAAcS,GAAd,WAGMC,EADKzB,EAAS0B,YACDC,WAAW,QAiG9B,OAVAC,qBAAU,WAEHR,GAvFY,SAACA,GAEhBK,EACCI,MAAM,WAAY,KAAMT,GACxBU,MACAC,MAAK,SAAAC,GAEEA,EAAKC,MAMLV,GAAS,GAJTA,GAAS,MAgFbW,CAAWd,KAIhB,CAACA,IAGA,qBAAKe,UAAU,YAAf,SAEI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,mBAAd,2BAGR,sBAAKA,UAAU,yBAAf,UAGiB,MAATnB,GAEA,cAACoB,EAAA,EAAD,CAAQD,UAAU,oBAAoBE,QAAS,WA1D9C,IAACC,IA0D+D7B,EAxDjFT,EACCU,OACA6B,gBAAgBD,GAChBP,MAAK,SAACS,GAEHrB,EAAQ,eAAIqB,EAAItB,OAEhBO,EACCgB,IAAID,EAAItB,KAAKwB,KACbZ,MACAC,MAAK,SAAAU,GAEEA,EAAIR,OAA+B,qBAAfQ,EAAIE,OAMxB1B,EAAQ,KAJRJ,EAAQ+B,KAAK,yBAUxBC,OAAM,SAACC,GAEJC,QAAQC,IAAIF,OA8BA,+BAMS,MAAT9B,GAEA,qCACI,uBACIiC,KAAK,OAAO7B,KAAK,OACjB8B,aAAa,MACbC,WAAW,QACXC,YAAY,YACZC,MAAOjC,EACPkC,SAAU,SAACC,GAAKlC,EAAQkC,EAAEC,OAAOH,UAIjC,sBAAMlB,UAAWb,EAAO,mBAAoB,qBAA5C,SAEyB,qBAATF,GAAwC,IAAhBA,EAAKqC,QAErC,qCAAGrC,EAAH,OAAaE,EAAO,GAAI,MAAxB,cAMZ,cAACc,EAAA,EAAD,CACID,UAAU,oBACVuB,MAAO,CAACC,SAAU,WAAYC,OAAQ,IACtCvB,QAAS,YAxHT,WAIxB,GAFAb,GAAS,GAENF,EAAM,CAEL,IAAMuC,EAAU,CAEZC,MAAO5C,EAAK4C,MACZC,SAAU3C,EACV4C,cAAe,GACfC,UAAU,6CAAD,OACoC7C,EADpC,SAKbK,EACCgB,IAAIvB,EAAKwB,KACTwB,IAAIL,GAELhD,EAAQ+B,KAAK,wBAIbpB,GAAS,GAgGyB2C,IAHlB,iCC9IbC,MAbf,WACI,OACI,sBAAKjC,UAAU,YAAf,UAEI,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,sBAEf,cAAC,EAAD,Q,8BCkCGkC,MAlCf,WAEI,IAAMxD,EAAUC,cAShB,OACI,qBAAKqB,UAAU,UAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CAAMmC,GAAG,kBAAT,SACI,cAAClC,EAAA,EAAD,CAAQD,UAAU,eAAlB,SACI,cAAC,IAAD,CAAiBoC,KAAMC,UAG/B,cAAC,IAAD,CAAMF,GAAG,qBAAT,SACI,cAAClC,EAAA,EAAD,CAAQD,UAAU,eAAlB,SACI,cAAC,IAAD,CAAiBoC,KAAME,UAG/B,cAAC,IAAD,CAAMH,GAAG,GAAT,SACI,cAAClC,EAAA,EAAD,CAAQD,UAAU,eAAeE,QAAS,WAnBtDrC,EAASU,OAAOgE,UAChB7D,EAAQ+B,KAAK,MAkBD,SACI,cAAC,IAAD,CAAiB2B,KAAMI,gB,kBCyDhCC,MAzFf,SAAkBC,GAEd,MAA8B9D,qBAA9B,mBAAO+D,EAAP,KAAgBC,EAAhB,KAEMC,EAAKhF,EAAS0B,YACdb,EAAUC,cAmEhB,OAjCAc,qBAAU,WAEgB,qBAAZkD,EAhCVE,EACCrD,WAAW,YACXc,IAAIoC,EAAMlC,KAAKsC,IACftD,WAAW,WACXuD,QAAQ,OAAQ,QAChBC,MAAM,GACNrD,MACAC,MAAK,SAAAC,GAEEA,EAAKC,OAEND,EAAKoD,SAAQ,SAAA3C,GAEZsC,EAAWtC,EAAIE,OAAO0C,WAyB1BL,EACCrD,WAAW,YACXc,IAAIoC,EAAMlC,KAAKsC,IACftD,WAAW,WACXuD,QAAQ,OAAQ,QAChBC,MAAM,GACNG,YAAW,SAAAC,GAEQA,EAASC,aACjBJ,SAAQ,SAAAK,GAEO,UAAhBA,EAAOxC,MAEN8B,EAAWU,EAAOhD,IAAIE,OAAO0C,aAU9C,CAACP,IAGA,sBAAK3C,UAAU,WAAWE,QAxCZ,WAEdxB,EAAQ+B,KAAR,0BAAgCiC,EAAMlC,KAAKsC,MAsC3C,UACI,qBAAK9C,UAAU,mBAAf,SACI,qBAAKuD,IAAKb,EAAMlC,KAAKgD,aAEzB,sBAAKxD,UAAU,mBAAf,UACI,qBAAKA,UAAU,kBAAf,SACK0C,EAAMlC,KAAKiD,gBAEhB,qBAAKzD,UAAU,oBAAf,SACK2C,W,MCcNe,MA/Ff,SAAehB,GAEX,IAAMG,EAAKhF,EAAS0B,YAEpB,EAA0BX,oBAAS,GAAnC,mBAAO+E,EAAP,KAActE,EAAd,KACA,EAAkCT,qBAAlC,mBAAOgF,EAAP,KAAkBC,EAAlB,KACA,EAA8CjF,qBAA9C,mBAAOkF,EAAP,KAAwBC,EAAxB,KA8DA,OACI,qBAAK/D,UAAU,QAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,cAACC,EAAA,EAAD,CAAQD,UAAU,gBAAgBE,QAT3B,WAEfwC,EAAMsB,WAAU,IAOR,mBAGA,oBAAIhE,UAAU,eAAd,8BACA,uBAAMiE,OAAO,GAAGjE,UAAU,cAA1B,UACI,uBAAOkE,QAAQ,QAAf,mBACA,uBAAOpD,KAAK,OAAO7B,KAAK,QAAQiC,MAAO0C,EAAWzC,SAAU,SAAAC,GAAC,OAAEyC,EAAazC,EAAEC,OAAOH,QAAQH,aAAa,MAAMoD,WAAW,UAGvHR,GACA,mBAAG3D,UAAU,eAAb,sCAGJ,uBAAOkE,QAAQ,cAAf,yBACA,0BAAUjF,KAAK,cAAcmF,KAAK,IAAIlD,MAAO4C,EAAiB3C,SAAU,SAAAC,GAAC,OAAE2C,EAAmB3C,EAAEC,OAAOH,QAAQH,aAAa,MAAMoD,WAAW,UAC7I,qBAAKnE,UAAU,mBAAf,SACI,cAACC,EAAA,EAAD,CAAQD,UAAU,mBAAmBE,QA/EtC,WAEfb,GAAS,GAEe,qBAAduE,GAAkD,IAArBA,EAAUtC,OAEf,qBAApBwC,EAGNjB,EACCrD,WAAW,YACX6E,IAAI,CAEDC,MAAO5B,EAAM3D,KAAK+D,GAClBW,cAAeG,EACfW,WAAY,IAAIC,KAEhBhB,SAAS,6CAAD,OAA+CI,EAA/C,QACRa,KAAM,IAGT7E,MAAK,kBAAIgB,QAAQC,IAAI,qCACrBH,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAKxBkC,EACCrD,WAAW,YACX6E,IAAI,CAEDC,MAAO5B,EAAM3D,KAAK+D,GAClBW,cAAeG,EACfW,WAAY,IAAIC,KAChBE,YAAaZ,EACbN,SAAS,6CAAD,OAA+CI,EAA/C,QACRa,KAAM,IAGT7E,MAAK,kBAAIgB,QAAQC,IAAI,qCACrBH,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAQ5BtB,GAAS,IA+BG,+BCyGTsF,MA1Lf,WAEI,IAAMjG,EAAUC,cAEhB,EAA4BC,oBAAS,GAArC,mBAAOgG,EAAP,KAAeZ,EAAf,KACA,EAAkCpF,oBAAS,GAA3C,mBAAOiG,EAAP,KAAkBC,EAAlB,KACA,EAAwBlG,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwCJ,qBAAxC,mBAAOmG,EAAP,KAAqBC,EAArB,KACA,EAAkCpG,oBAAS,GAA3C,mBAAOqG,EAAP,KAEMpC,GAFN,KAEWhF,EAAS0B,aACd2F,EAAcrH,EAASU,OAAO2G,YAqFpC,OAtBAzF,qBAAU,WAEa,qBAATV,EAEN+F,GAAa,IAIbA,GAAa,GACblE,QAAQC,IAAI,cApEbqE,GAECrC,EACCrD,WAAW,QACXc,IAAI4E,EAAY3E,KAChBZ,MACAC,MAAK,SAAAU,GAEEA,EAAIR,OAEJd,EAAQ,aAAC8D,GAAIxC,EAAIwC,IAAOxC,EAAIE,aA+Db,qBAAjBuE,GArDU,WAEpB,IAAII,EAAU,GAEdtC,EAAGrD,WAAW,YACb2D,YAAW,SAAAC,GAERA,EAASvD,KAAKoD,SAAQ,SAAA3C,GAElB,IAAIE,EAAI,aAAIsC,GAAGxC,EAAIwC,IAAOxC,EAAIE,QAE1B2E,EAAQC,SAAS5E,IAEjB2E,EAAQ1E,KAAKD,MAMrBwE,EAAgBG,MAoChBE,KAIL,CAACtG,EAAMgG,EAAcF,EAAWI,IAE/BC,EAQI,qCACA,qBAAKlF,UAAU,UAAf,UAIS6E,GAGD,qCACI,qBAAK7E,UAAU,sBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,kBAAkBuD,IAAKxE,EAAK+C,UAAW/C,EAAK+C,UAAU,KACrE,oBAAI9B,UAAU,oBAAd,SAAmCjB,EAAK6C,SAAU7C,EAAK6C,SAAS,UAYxE,sBAAK5B,UAAU,2BAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,oBAAIA,UAAU,iBAAd,sBAMA,cAACC,EAAA,EAAD,CAAQD,UAAU,kBAAkBE,QArEhD,WAEZ8D,GAAU,GACVpD,QAAQC,IAAI,WAkEY,SACI,cAAC,IAAD,CAAiBuB,KAAMkD,WAG/B,qBAAKtF,UAAU,wBAAf,SAIgC,qBAAjB+E,GACPA,EAAaQ,KAAI,SAAAC,GAEb,OAEI,mCAGwB,qBAAbA,GACP,cAAC,EAAD,CAA4BhF,KAAMgF,GAAnBA,EAAS1C,mBAsBxD8B,GACA,cAAC,EAAD,CAAO7F,KAAMA,EAAM6F,OAAQA,EAAQZ,UAAWA,OA9E/CtF,EAAQ+B,KAAK,M,kBCzDbgF,MAnDf,SAAoB/C,GAEhB,IAAMgD,EAAW,IAAIlB,KAA0B,IAArB9B,EAAMiD,KAAKC,SAC/BC,GAAc,IAAIrB,MAAOsB,UAAY,IA8BrCH,EA5Ba,SAACA,GAEhB,IAAMI,EAAMC,KAAKC,IAAIN,EAAKG,UAAY,IAAOD,GAE7C,OAAGE,EAAI,MAGG,GAAN,OAAUJ,EAAKO,WAAa,EAAGP,EAAKO,WAAW,IAAIP,EAAKO,WAAxD,YAAsEP,EAAKQ,aAAe,EAAGR,EAAKQ,aAAa,IAAIR,EAAKQ,cAEnHJ,EAAI,KAGH,GAAN,OAAUC,KAAKI,KAAKL,EAAI,GAAG,IAA3B,cAEKA,EAAI,GAGH,GAAN,OAAUC,KAAKI,KAAKL,EAAI,IAAxB,gBAKM,GAAN,OAAUC,KAAKI,KAAKL,GAApB,eAMKM,CAAWX,GAExB,OACI,sBAAK1F,UAAU,aAAauB,MAAO,CAAC+E,cAAe5D,EAAM6D,KAAK,cAAc,OAA5E,UACI,qBAAKvG,UAAU,qBAAf,SACI,qBAAKuD,IAAG,oDAA+Cb,EAAM8D,OAAOC,UAAU,EAAG,GAAzE,QAAmFC,IAAI,OAEnG,sBAAK1G,UAAU,qBAAqBuB,MAAO,CAACoF,WAAYjE,EAAM6D,KAAM,UAAU,QAASK,MAAOlE,EAAM6D,KAAM,QAAQ,SAAlH,UACI,qBAAKvG,UAAU,mBAAf,SAAmC0C,EAAM8D,SACzC,sBAAKxG,UAAU,sBAAf,UACK0C,EAAMQ,IACP,qBAAKlD,UAAU,mBAAf,SAAmC2F,cC4JxCkB,MA9Lf,SAAiBnE,GAEb,IAAMG,EAAKhF,EAAS0B,YACduH,EAASC,cAEf,EAAoBnI,mBAAS8D,EAAMI,IAAnC,mBAAOA,EAAP,KAAWkE,EAAX,KACA,EAA8BpI,qBAA9B,mBAAOqI,EAAP,KAAgBC,EAAhB,KACA,EAA4BtI,qBAA5B,mBAAOuI,EAAP,KAAeC,EAAf,KAEIC,EAAQC,SAASC,eAAe,kBAyHpC,OAhBA9H,qBAAU,WAEe,qBAAX0H,GAA0BL,EAAOhE,IAAMA,IAAOgE,EAAOhE,GAjFjD,WAEdsE,IAEA,IAAII,EAAY,GAEhB3E,EACCrD,WAAW,YACXc,IAAIwG,EAAOhE,IACXtD,WAAW,WACXuD,QAAQ,OAAQ,QAChBpD,MACAC,MAAK,SAAAC,GAEEA,EAAKC,QAELD,EAAKoD,SAAQ,SAAA3C,GAETkH,EAAUC,QAAV,aAAmB3E,GAAIxC,EAAIwC,IAAOxC,EAAIE,YAI1C4G,EAAUI,OAKjB9G,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAExBqG,EAAMF,EAAOhE,IAsDT4E,IAhDJ7E,EACCrD,WAAW,YACXc,IAAIwG,EAAOhE,IACXtD,WAAW,WACXuD,QAAQ,OAAQ,QAChBC,MAAM,GACNG,YAAW,SAACC,GAET,IAAMuE,EAAUvE,EAASC,aACrB8B,EAAU,GAEdwC,EAAQ1E,SAAQ,SAACK,GAEM,UAAhBA,EAAOxC,OAENqE,EAAQ1E,KAAR,aAEIqC,GAAIQ,EAAOhD,IAAIwC,IACZQ,EAAOhD,IAAIE,SAIlB4G,GAAU,SAAAQ,GAEN,MAA0D,qBAAhDA,EAAcC,MAAK,SAAAzG,GAAC,OAAEA,EAAE0B,KAAKqC,EAAQ,GAAGrC,MAEvC8E,EAAcE,OAAO3C,GAIrByC,YAuBV,OAAVP,IACHA,EAAMU,UAAYV,EAAMW,iBAI7B,CAACb,EAAQL,EAAOhE,GAAImE,IAGnB,qBAAKjH,UAAU,UAAf,SACI,sBAAKA,UAAU,qBAAqB8C,GAAG,iBAAvC,UAI0B,qBAAXqE,GAA0BL,EAAOhE,IACxCqE,EAAO5B,KAAI,SAAA0C,GAEP,OAEI,qCAG8B,IAAtBd,EAAOe,QAAQD,IACQ,IAAtBd,EAAOe,QAAQD,KACf,IAAIzD,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgBuC,aAAe,IAAI3D,KAAkD,IAA7C2C,EAAOA,EAAOe,QAAQD,GAAK,GAAGtC,KAAKC,SAAgBuC,YAC5G,IAAI3D,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgBwC,YAAc,IAAI5D,KAAkD,IAA7C2C,EAAOA,EAAOe,QAAQD,GAAK,GAAGtC,KAAKC,SAAgBwC,WAC1G,IAAI5D,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgByC,gBAAkB,IAAI7D,KAAkD,IAA7C2C,EAAOA,EAAOe,QAAQD,GAAK,GAAGtC,KAAKC,SAAgByC,eAE9G,qBAAKrI,UAAU,gBAAf,SACK,IAAIwE,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgBwC,UAAY,KAAO,IAAI5D,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgBuC,WAAW,GAAK,IAAM,IAAI3D,KAAsB,IAAjByD,EAAEtC,KAAKC,SAAgByC,gBAG9I,GAGJ,cAAC,EAAD,CAAYvF,GAAImF,EAAEnF,GAAIyD,KAAM0B,EAAEzB,SAAW9D,EAAM3D,KAAK6C,SAAuBsB,IAAK+E,EAAE/E,IAAKsD,OAAQyB,EAAEzB,OAAQb,KAAMsC,EAAEtC,aAS7HmB,EAAOhE,GACP,sBAAK9C,UAAU,0BAAf,UACI,0BACIc,KAAK,OACLd,UAAU,iBACViB,YAAY,4BACZmD,KAAK,IACLpD,WAAW,QACXE,MAAO+F,EACP9F,SAAU,SAAAC,GAAI8F,EAAW9F,EAAEC,OAAOH,UAEtC,cAACjB,EAAA,EAAD,CAAQD,UAAU,kBAAkBE,QAAS,YAtK7C,SAAC+G,QAEFqB,IAAZrB,GAAqC,KAAZA,GAAwC,qBAAfvE,EAAM3D,OAEvD8D,EACCrD,WAAW,YACXc,IAAIwG,EAAOhE,IACXtD,WAAW,WACX6E,IAAI,CACDnB,IAAK+D,EACLT,OAAQ9D,EAAM3D,KAAK6C,SACnB+D,KAAM,IAAInB,KACV1D,KAAM,SAETlB,MAAK,WAAKgB,QAAQC,IAAI,wBACtBH,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAExBuG,EAAW,KAqJmDqB,CAAYtB,IAA9D,SACI,cAAC,IAAD,CAAiB7E,KAAMoG,WAI/B,S,MCxDLC,MAhIf,SAAiB/F,GAEb,IAAMG,EAAKhF,EAAS0B,YACdb,EAAUC,cACVmI,EAASC,cACThI,EAAO2D,EAAM3D,KACb2J,EAAWhG,EAAMgG,SACvB,EAA0B9J,qBAA1B,mBAAO0F,EAAP,KAAcqE,EAAd,KA4CA,OAxBAlJ,qBAAU,WAfNoD,EACCrD,WAAW,QACXc,IAAIoI,EAASpE,OACb3E,MACAC,MAAK,SAAAU,GAEEA,EAAIR,OACJ6I,EAASrI,EAAIE,OAAOoB,aAG3BlB,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,QAS1B,IAqBC,sBAAKX,UAAU,UAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,cAACC,EAAA,EAAD,CAAQD,UAAU,kBAAkBE,QAAS,WAAKxB,EAAQ+B,KAAK,mBAAqBqG,EAAOhE,KAA3F,SACI,cAAC,IAAD,CAAiBV,KAAMwG,QAE3B,qBAAK5I,UAAU,iBAAf,kCAEJ,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgC0I,EAASjF,gBACzC,qBAAKzD,UAAU,kBAAf,SACI,qBAAKuD,IAAKmF,EAASlF,aAEvB,sBAAKxD,UAAU,uBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,iBAAf,yBAGA,qBAAKA,UAAU,gBAAf,SACM0I,EAAShE,YAAagE,EAAShE,YAAa,UAGtD,sBAAK1E,UAAU,gBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,iBAAf,mBAGA,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKuD,IAAG,oDAA+Ce,EAA/C,QAA4DoC,IAAI,OAE3EpC,QAGT,sBAAKtE,UAAU,gBAAf,UACI,qBAAKA,UAAU,mBAGf,qBAAKA,UAAU,qBAInB,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,wBAGA,qBAAKA,UAAU,gBAAf,SAEQ,IAAIwE,KAAmC,IAA9BkE,EAASnE,WAAWqB,SAAgByC,cAC3C,KACD,IAAI7D,KAAmC,IAA9BkE,EAASnE,WAAWqB,SAAgBuC,WAAa,GACzD,IACF,IAAI3D,KAAmC,IAA9BkE,EAASnE,WAAWqB,SAAgBwC,qBASzDrJ,EAAK+D,KAAO4F,EAASpE,MACrB,mCACI,cAACrE,EAAA,EAAD,CAAQD,UAAU,UAAUE,QAlFjC,WAEf2C,EACCrD,WAAW,YACXc,IAAIoI,EAAS5F,IACbnD,MACAC,MAAK,SAAAU,GAEEA,EAAIR,OACJQ,EAAIuI,IAAIC,YAGfpI,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAExBjC,EAAQ+B,KAAK,oBAoEO,SACI,cAAC,IAAD,CAAiB2B,KAAM2G,UAI/B,UCyGTC,MA7Nf,SAAkBtG,GAEd,IAAMoE,EAASC,cACTrI,EAAUC,cAGhB,GAFiBsK,cAEGrK,sBAApB,mBAAOkE,EAAP,KAAWkE,EAAX,KACA,EAAgCpI,qBAAhC,mBAAO8J,EAAP,KAAiBQ,EAAjB,KACA,EAAwBtK,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,qBAA1B,mBAAOuK,EAAP,KAAcC,EAAd,KACA,EAAgCxK,oBAAS,GAAzC,mBAAOyK,EAAP,KAAiBC,EAAjB,KACA,EAAgC1K,qBAAhC,mBAAO2K,EAAP,KAAiBC,EAAjB,KAEM3G,EAAKhF,EAAS0B,YACd2F,EAAcrH,EAASU,OAAO2G,YA8IpC,GA7FAzF,qBAAU,YAEa,qBAATV,GAA4C,qBAAb2J,GAA4B5F,IAAOgE,EAAOhE,MAGxD,qBAAbyG,IAENC,EAAYzK,EAAK8C,eACjBjB,QAAQC,IAAI,qBAIO,qBAAb0I,IAEHA,EAASnE,SAASsD,EAAS5F,IAE1BsG,GAAS,GAEHG,EAASnE,SAASsD,EAAS5F,KAEjCsG,GAAS,OAQtB,CAACV,EAAUS,EAAOI,IAErB9J,qBAAU,WAEH4J,IAECxG,EACCrD,WAAW,QACXc,IAAIvB,EAAK+D,IACT2G,OAAO,CAEJ5H,cAAe0H,IAGlB3J,MAAK,kBAAIgB,QAAQC,IAAI,0BACrBH,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAExB2I,GAAY,MAIjB,CAACH,EAAOI,EAAUF,IA0BrB5J,qBAAU,YAEiB,qBAAbiJ,GAA4B5B,EAAOhE,IAAMgE,EAAOhE,KAAOA,IA1HjED,EACCrD,WAAW,YACXc,IAAIwG,EAAOhE,IACXnD,MACAC,MAAK,SAAAU,GAEEA,EAAIoJ,QAEJR,EAAY,aAACpG,GAAIxC,EAAIwC,IAAOxC,EAAIE,SAChCwG,EAAM1G,EAAIwC,QAuHC,qBAAT/D,GA7GPmG,GAECrC,EACCrD,WAAW,QACXc,IAAI4E,EAAY3E,KAChBZ,MACAC,MAAK,SAAAU,GAEEA,EAAIoJ,OAEJ1K,EAAQ,aAAC8D,GAAIxC,EAAIwC,IAAOxC,EAAIE,cA0GzC,CAACkI,EAAU3J,EAAM+H,EAAOhE,KAGvBoC,EAKA,OACI,sBAAKlF,UAAU,WAAf,UAGwB,SAAhB8G,EAAOhG,KACP,qCACA,qBAAKd,UAAU,qBAAf,SAG4B,qBAAb0I,GAA4B5B,EAAOhE,IAC1C,qCACI,qBAAK9C,UAAU,mBAAf,SACI,qBAAKuD,IAAKmF,EAASlF,aAEvB,qBAAKxD,UAAU,mBAAf,SACI,8BACI,qBAAKA,UAAU,kBAAf,SACK0I,EAASjF,oBAOtB,sBAAKzD,UAAU,oBAAf,UACI,cAACC,EAAA,EAAD,CAAQD,UAAU,mBAAmBuB,MAAO,CAACoF,WAAYwC,EAAO,QAAQ,cAAevC,MAAOuC,EAAO,SAAU,SAAUjJ,QAxEpI,WAEjB,GAAGiJ,EAAM,CAEL,IAAIhE,EAAUoE,EACdpE,EAAUA,EAAQwE,QAAO,SAAA7G,GAAE,OAAIA,IAAO4F,EAAS5F,MAC/C0G,EAAYrE,GACZiE,GAAS,OAER,CAED,IAAIjE,EAAUoE,EACdpE,EAAQ1E,KAAKiI,EAAS5F,IACtB0G,EAAYrE,GAEZiE,GAAS,GAIbE,GAAY,IAqDgB,SACI,cAAC,IAAD,CAAiBlH,KAAMwH,QAE3B,cAAC3J,EAAA,EAAD,CAAQD,UAAU,mBAAmBE,QAAS,WAlI1ExB,EAAQ+B,KAAR,0BAAgCqG,EAAOhE,MAkIX,SACI,cAAC,IAAD,CAAiBV,KAAMyH,gBAO3C,qBAAK7J,UAAU,0BAAf,SACI,cAAC,EAAD,CAASjB,KAAMA,EAAM+D,GAAIA,SAI7B,GAMgB,SAAhBgE,EAAOhG,KACP,mCACI,cAAC,EAAD,CAAS4H,SAAUA,EAAU3J,KAAMA,MAGvC,MAvDZL,EAAQ+B,KAAK,MC9JNqJ,MATf,WACI,OACI,sBAAK9J,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,MC6IG+J,MAlJf,WAEI,IAAMlH,EAAKhF,EAAS0B,YACd2F,EAAcrH,EAASU,OAAO2G,YAEpC,EAAwBtG,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA8BN,oBAAS,GAAvC,mBAAOoL,EAAP,KAAgBC,EAAhB,KACA,EAA4BrL,qBAA5B,mBAAO0C,EAAP,KAAe4I,EAAf,KAEMC,EAAU,WAETjF,GAECrC,EACCrD,WAAW,QACXc,IAAI4E,EAAY3E,KAChBZ,MACAC,MAAK,SAAAU,GAEEA,EAAIR,QAEJd,EAAQ,aAAC8D,GAAIxC,EAAIwC,IAAOxC,EAAIE,SAC5BtB,EAAQoB,EAAIE,OAAOoB,UACnBsI,EAAU5J,EAAIE,OAAOoB,SAASN,aA+E9C,OAnBA7B,qBAAU,WACa,qBAATV,GAENoL,MAGL,CAACpL,IAGJU,qBAAU,WAEHR,GAjCY,SAACA,GAEhB4D,EACCrD,WAAW,QACXE,MAAM,WAAY,KAAMT,GACxBU,MACAC,MAAK,SAAAC,GAEEA,EAAKC,MAMLmK,GAAW,GAJXA,GAAW,MAyBflK,CAAWd,KAIhB,CAACA,IAGA,qBAAKe,UAAU,mBAAf,SAGuB,oBAARjB,EACP,qCACI,yCAEA,qBAAKiB,UAAU,2BAAf,SACI,qBAAKuD,IAAKxE,EAAK+C,UAAW/C,EAAK+C,UAAU,GAAI4E,IAAI,OAGrD,uBAAMzC,OAAO,GAAGjE,UAAU,yBAA1B,UACI,uBAAOkE,QAAQ,OAAf,uBACA,uBAAOpD,KAAK,OAAOI,MAAOjC,EAAMkC,SAAU,SAAAC,GAAIlC,EAAQkC,EAAEC,OAAOH,OAAQgJ,EAAU9I,EAAEC,OAAOH,MAAMI,WAE3F0I,GAAWjL,EAAK6C,WAAa3C,EAG9B,GAFA,mBAAGsC,MAAO,CAACqF,MAAO,OAAlB,gDAMU,GAAVtF,EACA,mBAAGC,MAAO,CAACqF,MAAO,OAAlB,2CAEA,GAGJ,gCACI,wBAAQ5G,UAAU,8BAA8BE,QAAS,WAjG7EhB,EAAQH,EAAK6C,WAiGO,mBACA,wBAAQ5B,UAAS,iCAA4BgK,GAAW,WAAa9J,QAAS,kBAAK8J,OA5FzF,IAAX1I,GAAgB0I,IAEfnH,EACCrD,WAAW,QACXc,IAAIvB,EAAK+D,IACT2G,OAAO,CAEJ7H,SAAU3C,EACV6C,UAAU,6CAAD,OAA+C7C,EAA/C,UAGZyB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MACxBwJ,IACAjL,EAAQD,GACRiL,EAAUjL,EAAKqC,UA8E8G,IAA7G,6BAKZ,4CCxHD8I,MAff,WACI,OACI,qBAAKpK,UAAU,gBAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqK,KAAK,qBAAqBC,UAAWP,EAAkBQ,OAAK,IACnE,cAAC,IAAD,CAAOF,KAAK,wBAAwBC,UAAWR,aCIpDU,MAbf,WACE,OACE,qBAAKxK,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,KAAK,IAAIC,UAAWrI,EAAWsI,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWF,YCD/BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7D,SAASC,eAAe,SAM1BkD,M","file":"static/js/main.b029babd.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAuvdYYPV_TaQbcylGPyiJbGdyhDYti17c\",\r\n  authDomain: \"chit-chat-29154.firebaseapp.com\",\r\n  projectId: \"chit-chat-29154\",\r\n  storageBucket: \"chit-chat-29154.appspot.com\",\r\n  messagingSenderId: \"1068541060485\",\r\n  appId: \"1:1068541060485:web:5840d8e994fee532b090ec\"\r\n};\r\n  // Initialize Firebase\r\nconst Firebase = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = Firebase.auth();\r\n\r\nexport default Firebase;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport './LoginForm.scss'\r\n\r\nimport Firebase, { googleProvider } from '../../../Config/firebase'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction LoginForm() {\r\n\r\n    const history = useHistory()\r\n\r\n    const [step, setStep] = useState('1')\r\n    const [user, setUser] = useState()\r\n    const [name, setName] = useState()\r\n    const [valid, setValid] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const db = Firebase.firestore()\r\n    const userRef = db.collection('User')\r\n\r\n    const checkValid = (name) => {\r\n\r\n        userRef\r\n        .where('userName', '==', name)\r\n        .get()\r\n        .then(docs=>{\r\n\r\n            if(!docs.empty){\r\n\r\n                setValid(false)\r\n\r\n            }else {\r\n\r\n                setValid(true)\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const handle_registerName = () => {\r\n\r\n        setError(false)\r\n\r\n        if(valid){\r\n\r\n            const newUser = {\r\n\r\n                email: user.email, \r\n                userName: name,\r\n                favouriteChat: [],\r\n                avatarUrl: \r\n                `https://avatars.dicebear.com/api/initials/${name}.svg`\r\n    \r\n            }\r\n    \r\n            userRef\r\n            .doc(user.uid)\r\n            .set(newUser)\r\n\r\n            history.push(\"/dashboard/chat\")\r\n\r\n        }else{\r\n\r\n            setError(true)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handle_login = (provider) => {\r\n\r\n        Firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .then((res) => {\r\n            \r\n            setUser({...res.user})\r\n\r\n            userRef\r\n            .doc(res.user.uid)\r\n            .get()\r\n            .then(doc => {\r\n    \r\n                if(!doc.empty && typeof doc.data() !== 'undefined'){\r\n    \r\n                    history.push(\"/dashboard/chat\")\r\n                    \r\n                }else{\r\n    \r\n                    setStep('2')\r\n    \r\n                }\r\n            }) \r\n\r\n        })\r\n        .catch((err) => {\r\n\r\n            console.log(err)\r\n\r\n        })  \r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(name){\r\n\r\n            checkValid(name)\r\n\r\n        }\r\n\r\n    }, [name])\r\n\r\n    return (\r\n        <div className=\"loginForm\">\r\n\r\n            <div className=\"loginForm__form\">\r\n                <div className=\"loginForm__headerWrap\">\r\n                    <div className=\"loginForm__header\">\r\n                        <h1 className=\"loginForm__title\">Chit-Chat</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"loginForm__contentWrap\">\r\n                    {\r\n\r\n                        step === '1'\r\n                        &&\r\n                        <Button className=\"loginForm__button\" onClick={()=>{handle_login(googleProvider)}}>Login with Google</Button>\r\n                        \r\n                    }\r\n\r\n                    {\r\n\r\n                        step === '2'\r\n                        &&\r\n                        <>\r\n                            <input \r\n                                type='text' name='name' \r\n                                autoComplete='off' \r\n                                spellCheck=\"false\" \r\n                                placeholder=\"Your name\"\r\n                                value={name} \r\n                                onChange={(e)=>{setName(e.target.value)}} />\r\n\r\n                            {\r\n\r\n                                <font className={valid? 'loginForm__valid': 'loginForm__inValid'}>\r\n                                    {\r\n                                        (typeof name !== 'undefined' && name.length !== 0)\r\n                                        &&\r\n                                        <>{name} is {valid? '': 'not'} valid</>\r\n                                    }\r\n                                </font>\r\n\r\n                            }\r\n                            \r\n                            <Button \r\n                                className=\"loginForm__button\" \r\n                                style={{position: 'absolute', bottom: 20}}\r\n                                onClick={()=>{handle_registerName()}}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n\r\n                        </>\r\n\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport './LoginPage.scss'\r\n\r\nimport LoginForm from './LoginForm/LoginForm'\r\n\r\nfunction LoginPage() {\r\n    return (\r\n        <div className=\"loginPage\">\r\n\r\n            <div className=\"loginPage__circle\"></div>\r\n            <div className=\"loginPage__square\"></div>\r\n            \r\n            <LoginForm />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom'\r\nimport './Toolbar.scss'\r\n\r\nimport Firebase from '../../Config/firebase';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt, faCog, faHeart, faCommentAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Toolbar() {\r\n\r\n    const history = useHistory()\r\n\r\n    const handle_logout = () => {\r\n\r\n        Firebase.auth().signOut()\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <div className=\"toolbar__list\">\r\n                <Link to=\"/dashboard/chat\">\r\n                    <Button className=\"toolbar__btn\">\r\n                        <FontAwesomeIcon icon={faCommentAlt} />\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/dashboard/setting\">\r\n                    <Button className=\"toolbar__btn\">\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"\">\r\n                    <Button className=\"toolbar__btn\" onClick={()=>{handle_logout()}}>\r\n                        <FontAwesomeIcon icon={faSignOutAlt} />\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './ChatItem.scss'\r\nimport { useHistory } from 'react-router'\r\nimport Firebase from '../../../../../Config/firebase'\r\n\r\nfunction ChatItem(props) {\r\n\r\n    const [lastMsg, setLastMsg] = useState()\r\n\r\n    const db = Firebase.firestore()\r\n    const history = useHistory();\r\n\r\n    const getLastMsg = () => {\r\n\r\n        db\r\n        .collection('ChatRoom')\r\n        .doc(props.data.id)\r\n        .collection('Message')\r\n        .orderBy('time', 'desc')\r\n        .limit(1)\r\n        .get()\r\n        .then(docs => {\r\n\r\n            if(!docs.empty){\r\n\r\n               docs.forEach(doc => {\r\n\r\n                setLastMsg(doc.data().msg)\r\n\r\n               })\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const goto_chat = () => {\r\n\r\n        history.push(`/dashboard/chat/${props.data.id}`)\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(typeof lastMsg === \"undefined\"){\r\n\r\n            getLastMsg()\r\n\r\n        }else {\r\n\r\n            db\r\n            .collection(\"ChatRoom\")\r\n            .doc(props.data.id)\r\n            .collection(\"Message\")\r\n            .orderBy('time', 'desc')\r\n            .limit(1)\r\n            .onSnapshot(snapshot=>{\r\n\r\n                const changes = snapshot.docChanges();\r\n                changes.forEach(change => {\r\n\r\n                    if(change.type === 'added'){\r\n\r\n                        setLastMsg(change.doc.data().msg)\r\n\r\n                    }\r\n\r\n                })\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }, [lastMsg])\r\n\r\n    return (\r\n        <div className=\"chatItem\" onClick={goto_chat}>\r\n            <div className=\"chatItem__avatar\" >\r\n                <img src={props.data.chatIcon} />\r\n            </div>\r\n            <div className=\"chatItem__detail\">\r\n                <div className=\"chatItem__title\">\r\n                    {props.data.chatroomTitle}\r\n                </div>\r\n                <div className=\"chatItem__message\">\r\n                    {lastMsg}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"./Modal.scss\"\r\n\r\nimport Firebase from '../../Config/firebase'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Modal(props) {\r\n\r\n    const db = Firebase.firestore()\r\n\r\n    const [error, setError] = useState(false)\r\n    const [chatTitle, setChatTitle] = useState()\r\n    const [chatDescription, setChatDescription] = useState()\r\n\r\n    const createChat = () => {\r\n\r\n        setError(false)\r\n\r\n        if(typeof chatTitle !== 'undefined' && chatTitle.length !== 0){\r\n\r\n            if(typeof chatDescription === 'undefined'){\r\n\r\n                // add chat room in firebase\r\n                db\r\n                .collection(\"ChatRoom\")\r\n                .add({\r\n\r\n                    admin: props.user.id,\r\n                    chatroomTitle: chatTitle,\r\n                    createDate: new Date(),\r\n                    // description: chatDescription,\r\n                    chatIcon: `https://avatars.dicebear.com/api/initials/${chatTitle}.svg`,\r\n                    like: 0\r\n\r\n                })\r\n                .then(()=>console.log(\"created chat room successfully\"))\r\n                .catch(err=>console.log(err))\r\n\r\n            }else {\r\n\r\n                    // add chat room in firebase\r\n                db\r\n                .collection(\"ChatRoom\")\r\n                .add({\r\n\r\n                    admin: props.user.id,\r\n                    chatroomTitle: chatTitle,\r\n                    createDate: new Date(),\r\n                    description: chatDescription,\r\n                    chatIcon: `https://avatars.dicebear.com/api/initials/${chatTitle}.svg`,\r\n                    like: 0\r\n\r\n                })\r\n                .then(()=>console.log(\"created chat room successfully\"))\r\n                .catch(err=>console.log(err))\r\n\r\n            }\r\n\r\n            \r\n\r\n        }else {\r\n\r\n            setError(true)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n\r\n        props.setIsOpen(false)\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__dialog\">\r\n                <Button className=\"modal__button\" onClick={closeModal}>\r\n                    Close\r\n                </Button>\r\n                <h1 className=\"modal__title\">Create Chat Room</h1>\r\n                <form action=\"\" className=\"modal__form\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" name=\"title\" value={chatTitle} onChange={e=>setChatTitle(e.target.value)} autoComplete=\"off\" spellcheck=\"false\" />\r\n                    {\r\n\r\n                        error &&\r\n                        <p className=\"modal__error\">Please fill in the title</p>\r\n\r\n                    }\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea name=\"description\" rows=\"4\" value={chatDescription} onChange={e=>setChatDescription(e.target.value)} autoComplete=\"off\" spellcheck=\"false\" />\r\n                    <div className=\"modal__container\">\r\n                        <Button className=\"modal__createBtn\" onClick={createChat} >Create</Button>                    \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport './Sidebar.scss'\r\nimport ChatItem from './ChatItem/ChatItem';\r\n\r\nimport Firebase from '../../../../Config/firebase'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen, faSearch, faPlusCircle, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from '../../../../components/Modal/Modal';\r\n\r\nfunction Sidebar() {\r\n\r\n    const history = useHistory()\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user, setUser] = useState()\r\n    const [chatroomList, setChatroomList] = useState()\r\n    const [isRefresh, setIsRefresh] = useState(false)\r\n\r\n    const db = Firebase.firestore()\r\n    const currentUser = Firebase.auth().currentUser\r\n\r\n    const getUser = () => {\r\n\r\n        if(currentUser){\r\n\r\n            db\r\n            .collection('User')\r\n            .doc(currentUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n\r\n                if(!doc.empty){\r\n\r\n                    setUser({id: doc.id, ...doc.data()})\r\n\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const getChatroomList = () => {\r\n\r\n        let newList = []\r\n\r\n        db.collection('ChatRoom')\r\n        .onSnapshot(snapshot => {\r\n\r\n            snapshot.docs.forEach(doc => {\r\n\r\n                var data = {id:doc.id, ...doc.data()}\r\n\r\n                if(!newList.includes(data)){\r\n\r\n                    newList.push(data)\r\n                }\r\n\r\n            })\r\n\r\n\r\n            setChatroomList(newList)\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // const refreshChat = () => {\r\n\r\n    //     setIsRefresh(true)\r\n\r\n    // }\r\n\r\n    const addChat = () => {\r\n\r\n        setIsOpen(true)\r\n        console.log(\"opened\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(typeof user !== 'undefined'){\r\n\r\n            setIsLoading(false)\r\n\r\n        } else {\r\n\r\n            setIsLoading(true)\r\n            console.log('loading...')\r\n            getUser()\r\n\r\n        }\r\n\r\n        if(typeof chatroomList === 'undefined'){\r\n\r\n            getChatroomList();\r\n\r\n        }\r\n\r\n    }, [user, chatroomList, isLoading, isRefresh])\r\n\r\n    if(!currentUser){\r\n\r\n        return history.push('/')\r\n\r\n    }else{\r\n\r\n        return (\r\n    \r\n            <>\r\n            <div className=\"sidebar\">\r\n    \r\n                {\r\n    \r\n                    !isLoading\r\n                    &&\r\n    \r\n                    <>\r\n                        <div className=\"sidebar__headerWrap\">\r\n                            <div className=\"sidebar__header\">                \r\n                                <img className=\"sidebar__avatar\" src={user.avatarUrl? user.avatarUrl:''} />\r\n                                <h1 className=\"sidebar__userName\">{user.userName? user.userName:''}</h1>\r\n                                {/* <Button className=\"sidebar__button\">\r\n                                    <FontAwesomeIcon icon={faPen} />\r\n                                </Button> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"sidebar__searchBox\">\r\n                            <input type=\"text\" className=\"sidebar__searchbar\" placeholder=\"Search for a ChatRoom\" />\r\n                            <Button className=\"sidebar__button\" style={{color: '#1ac0a2'}}>\r\n                                <FontAwesomeIcon icon={faSearch} />\r\n                            </Button>\r\n                        </div> */}\r\n                        <div className=\"sidebar__chatRoomSection\">\r\n                            <div className=\"sidebar__titleHeader\">\r\n                                <h1 className=\"sidebar__title\">\r\n                                    ChatRoom\r\n                                </h1>\r\n                                {/* <Button className=\"sidebar__button\" onClick={setIsRefresh(true)}>\r\n                                    <FontAwesomeIcon icon={faSyncAlt} />\r\n                                </Button> */}\r\n                                <Button className=\"sidebar__button\" onClick={addChat}>\r\n                                    <FontAwesomeIcon icon={faPlusCircle} />\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"sidebar__chatRoomList\">\r\n                                \r\n                                {\r\n    \r\n                                    typeof chatroomList !== 'undefined' &&\r\n                                    chatroomList.map(chatroom => {\r\n    \r\n                                        return(\r\n    \r\n                                            <>\r\n                                            {\r\n    \r\n                                                typeof chatroom !== 'undefined' && \r\n                                                <ChatItem key={chatroom.id} data={chatroom} />\r\n    \r\n                                            }\r\n                                            </>\r\n    \r\n    \r\n                                        )\r\n    \r\n                                    })\r\n    \r\n                                }\r\n    \r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n    \r\n                }\r\n\r\n            </div>\r\n\r\n            {\r\n                isOpen &&\r\n                <Modal user={user} isOpen={isOpen} setIsOpen={setIsOpen} />\r\n            }\r\n            \r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect } from 'react'\r\nimport './ChatBubble.scss'\r\n\r\nfunction ChatBubble(props) {\r\n\r\n    const sentTime = new Date(props.time.seconds * 1000);\r\n    const currentTime = new Date().getTime() / 1000;\r\n    \r\n    const formatTime = (time) => {\r\n        \r\n        const ago = Math.abs(time.getTime() / 1000 - currentTime);\r\n        \r\n        if(ago>60*60*24){\r\n            \r\n            // a day ago\r\n            return `${time.getHours() > 9? time.getHours():'0'+time.getHours()}:${time.getMinutes() > 9? time.getMinutes():'0'+time.getMinutes()}`\r\n            \r\n        }else if(ago>60*60){\r\n            \r\n            // a hour ago\r\n            return `${Math.ceil(ago/60/60)} hours ago`\r\n            \r\n        }else if(ago>60){\r\n            \r\n            // a minutes ago\r\n            return `${Math.ceil(ago/60)} minutes ago`\r\n            \r\n        }else{\r\n            \r\n            // a second ago\r\n            return `${Math.ceil(ago)} second ago`\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    const time = formatTime(sentTime);\r\n\r\n    return (\r\n        <div className=\"chatBubble\" style={{flexDirection: props.isMe?\"row-reverse\":\"row\"}}>\r\n            <div className=\"chatBubble__avatar\">\r\n                <img src={`https://avatars.dicebear.com/api/initials/${props.sender.substring(0, 2)}.svg`} alt=\"\" />\r\n            </div>\r\n            <div className=\"chatBubble__bubble\" style={{background: props.isMe? \"#1bb798\":\"white\", color: props.isMe? \"white\":\"black\"}}>\r\n                <div className=\"chatBubble__name\">{props.sender}</div>\r\n                <div className=\"chatBubble__message\">\r\n                    {props.msg}\r\n                    <div className=\"chatBubble__time\">{time}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBubble\r\n","import React, { useState, useEffect } from 'react'\r\nimport './ChatBox.scss'\r\n\r\nimport ChatBubble from './ChatBubble/ChatBubble'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Firebase from '../../../../../Config/firebase'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ChatBox(props) {\r\n\r\n    const db = Firebase.firestore()\r\n    const params = useParams()\r\n\r\n    const [id, setID] = useState(props.id)\r\n    const [message, setMessage] = useState()\r\n    const [dialog, setDialog] = useState()\r\n\r\n    let frame = document.getElementById(\"chatBox__frame\")\r\n\r\n    const sendMessage = (message) => {\r\n\r\n        if(message !== undefined && message !== '' && typeof props.user !== 'undefiend'){\r\n\r\n            db\r\n            .collection('ChatRoom')\r\n            .doc(params.id)\r\n            .collection('Message')\r\n            .add({\r\n                msg: message, \r\n                sender: props.user.userName,\r\n                time: new Date(),\r\n                type: 'text'\r\n            })\r\n            .then(()=>{console.log('sent successfully')})\r\n            .catch(err=>console.log(err))\r\n\r\n            setMessage(\"\")\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const getDialog = () => {\r\n\r\n        setDialog();\r\n\r\n        let newDialog = []\r\n\r\n        db\r\n        .collection('ChatRoom')\r\n        .doc(params.id)\r\n        .collection('Message')\r\n        .orderBy('time', 'desc')\r\n        .get()\r\n        .then(docs => {\r\n\r\n            if(!docs.empty){\r\n\r\n                docs.forEach(doc=>{\r\n\r\n                    newDialog.unshift({id: doc.id, ...doc.data()})\r\n\r\n                })\r\n\r\n                setDialog(newDialog)\r\n\r\n            }\r\n\r\n        })\r\n        .catch(err=>console.log(err))\r\n\r\n        setID(params.id)\r\n\r\n    }\r\n\r\n    const checkUpdate = () => {\r\n\r\n        db\r\n        .collection('ChatRoom')\r\n        .doc(params.id)\r\n        .collection('Message')\r\n        .orderBy('time', 'desc')\r\n        .limit(1)\r\n        .onSnapshot((snapshot)=>{\r\n\r\n            const changes = snapshot.docChanges();\r\n            let newList = []\r\n\r\n            changes.forEach((change)=>{\r\n\r\n                if(change.type === 'added'){\r\n\r\n                    newList.push({\r\n\r\n                        id: change.doc.id,\r\n                        ...change.doc.data()\r\n\r\n                    })\r\n\r\n                    setDialog(currentDialog => {\r\n\r\n                        if(typeof currentDialog.find(e=>e.id===newList[0].id) === 'undefined'){\r\n\r\n                            return currentDialog.concat(newList)\r\n\r\n                        }else{\r\n\r\n                            return currentDialog\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n\r\n            })\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(typeof dialog === 'undefined' && params.id || id !== params.id){\r\n\r\n            getDialog()\r\n\r\n        }else{\r\n\r\n            checkUpdate()\r\n            if(frame !== null)\r\n            frame.scrollTop = frame.scrollHeight;\r\n\r\n        }\r\n\r\n    }, [dialog, params.id, message])\r\n\r\n    return (\r\n        <div className=\"chatBox\">\r\n            <div className=\"chatBox__container\" id=\"chatBox__frame\">\r\n\r\n                {\r\n\r\n                    typeof dialog !== 'undefined' && params.id &&\r\n                    dialog.map(d => {\r\n\r\n                        return(\r\n\r\n                            <>\r\n                                {\r\n\r\n                                    dialog.indexOf(d) === 0 || \r\n                                    (dialog.indexOf(d) !== 0) &&\r\n                                    (new Date(d.time.seconds * 1000).getMonth() !== new Date(dialog[dialog.indexOf(d) - 1].time.seconds * 1000).getMonth() ||\r\n                                    new Date(d.time.seconds * 1000).getDate() !== new Date(dialog[dialog.indexOf(d) - 1].time.seconds * 1000).getDate() ||\r\n                                    new Date(d.time.seconds * 1000).getFullYear() !== new Date(dialog[dialog.indexOf(d) - 1].time.seconds * 1000).getFullYear())\r\n                                    ?\r\n                                    <div className=\"chatBox__date\">\r\n                                        {new Date(d.time.seconds * 1000).getDate() + \"/\" + (new Date(d.time.seconds * 1000).getMonth()+1) + \"/\" + new Date(d.time.seconds * 1000).getFullYear()}\r\n                                    </div>\r\n                                    : \r\n                                    \"\"\r\n\r\n                                }\r\n                                <ChatBubble id={d.id} isMe={d.sender === props.user.userName? true: false} msg={d.msg} sender={d.sender} time={d.time}/>\r\n                            </>\r\n\r\n                        )\r\n\r\n                    })\r\n\r\n                }\r\n                {\r\n                    params.id?\r\n                    <div className=\"chatBox__inputContainer\">\r\n                        <textarea\r\n                            type=\"text\" \r\n                            className=\"chatBox__input\" \r\n                            placeholder=\"Type in your message here\"\r\n                            rows=\"1\"\r\n                            spellCheck=\"false\"\r\n                            value={message}\r\n                            onChange={e=>{setMessage(e.target.value)}}\r\n                        />\r\n                        <Button className=\"chatBox__button\" onClick={()=>{sendMessage(message)}}>\r\n                            <FontAwesomeIcon icon={faPaperPlane} />\r\n                        </Button>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"./InfoBox.scss\"\r\n\r\nimport Firebase from '../../../../../Config/firebase'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nfunction InfoBox(props) {\r\n\r\n    const db = Firebase.firestore();\r\n    const history = useHistory()\r\n    const params = useParams();\r\n    const user = props.user;\r\n    const chatRoom = props.chatRoom\r\n    const [admin, setAdmin] = useState();\r\n\r\n    const getAdmin = () => {\r\n\r\n\r\n        db\r\n        .collection(\"User\")\r\n        .doc(chatRoom.admin)\r\n        .get()\r\n        .then(doc=> {\r\n\r\n            if(!doc.empty)\r\n                setAdmin(doc.data().userName)\r\n\r\n        })\r\n        .catch(err=> console.log(err))\r\n\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        getAdmin();\r\n\r\n    }, [])\r\n\r\n    const deleteChat = () => {\r\n\r\n        db\r\n        .collection(\"ChatRoom\")\r\n        .doc(chatRoom.id)\r\n        .get()\r\n        .then(doc=> {\r\n\r\n            if(!doc.empty)\r\n                doc.ref.delete();\r\n\r\n        })\r\n        .catch(err=>console.log(err))\r\n\r\n        history.push('/dashboard/chat')\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"infoBox\">\r\n            \r\n            <div className=\"infoBox__toolbar\">\r\n                <Button className=\"infoBox__button\" onClick={()=>{history.push('/dashboard/chat/' + params.id)}}>\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </Button>\r\n                <div className=\"infoBox__title\">Chat Room Details</div>\r\n            </div>\r\n            <div className=\"infoBox__container\">\r\n                <h1 className=\"infoBox__title\">{chatRoom.chatroomTitle}</h1>\r\n                <div className=\"infoBox__avatar\">\r\n                    <img src={chatRoom.chatIcon} />\r\n                </div>\r\n                <div className=\"infoBox__infoSection\">\r\n                    <div className=\"infoBox__description\">\r\n                        <div className=\"infoBox__title\">\r\n                            Description\r\n                        </div>\r\n                        <div className=\"infoBox__info\">\r\n                            { chatRoom.description? chatRoom.description: \"NA\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"infoBox__grid\">\r\n                        <div className=\"infoBox__card admin\">\r\n                            <div className=\"infoBox__title\">\r\n                                Admin\r\n                            </div>\r\n                            <div className=\"infoBox__info\">\r\n                                <div className=\"infoBox__userAvatar\">\r\n                                    <img src={`https://avatars.dicebear.com/api/initials/${admin}.svg`} alt=\"\" />\r\n                                </div>\r\n                                {admin}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoBox__card\">\r\n                            <div className=\"infoBox__title\">\r\n                                \r\n                            </div>\r\n                            <div className=\"infoBox__info\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoBox__card\">\r\n                            <div className=\"infoBox__title\">\r\n                                Created on\r\n                            </div>\r\n                            <div className=\"infoBox__info\">\r\n                                {\r\n                                    new Date(chatRoom.createDate.seconds * 1000).getFullYear()\r\n                                    + \"/\" +\r\n                                    (new Date(chatRoom.createDate.seconds * 1000).getMonth() + 1)\r\n                                    + \"/\" +\r\n                                    new Date(chatRoom.createDate.seconds * 1000).getDate()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                { \r\n                        user.id === chatRoom.admin ? \r\n                        <>\r\n                            <Button className=\"del-btn\" onClick={deleteChat}>\r\n                                <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n                            </Button>\r\n                        </>\r\n                        :\r\n                        \"\"\r\n                }\r\n            </div>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport './ChatRoom.scss'\r\n\r\nimport ChatBox from './ChatBox/ChatBox'\r\nimport InfoBox from './InfoBox/InfoBox'\r\n\r\nimport Firebase from '../../../../Config/firebase'\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ChatRoom(props) {\r\n\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const [id, setID] = useState() \r\n    const [chatRoom, setChatRoom] = useState()\r\n    const [user, setUser] = useState()\r\n    const [liked, setLiked] = useState()\r\n    const [isChange, setIsChange] = useState(false)\r\n    const [likeList, setLikeList] = useState()\r\n\r\n    const db = Firebase.firestore()\r\n    const currentUser = Firebase.auth().currentUser\r\n\r\n    const getChatroom = () => {\r\n\r\n        db\r\n        .collection('ChatRoom')\r\n        .doc(params.id)\r\n        .get()\r\n        .then(doc => {\r\n\r\n            if(!doc.emtpy){\r\n\r\n                setChatRoom({id: doc.id, ...doc.data()})\r\n                setID(doc.id)\r\n\r\n            }            \r\n\r\n        })\r\n\r\n    }\r\n\r\n    const getUser = () => {\r\n\r\n        if(currentUser){\r\n\r\n            db\r\n            .collection('User')\r\n            .doc(currentUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n    \r\n                if(!doc.emtpy){\r\n    \r\n                    setUser({id: doc.id, ...doc.data()})\r\n\r\n                }\r\n    \r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const goto_info = () => {\r\n\r\n        history.push(`/dashboard/info/${params.id}`)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(typeof user !== 'undefined' && typeof chatRoom !== 'undefined' || id !== params.id){\r\n\r\n            \r\n            if(typeof likeList === 'undefined'){\r\n\r\n                setLikeList(user.favouriteChat)\r\n                console.log('updated likeList')\r\n\r\n            }\r\n\r\n            if(typeof likeList !== 'undefined'){\r\n\r\n                if(likeList.includes(chatRoom.id)){\r\n\r\n                    setLiked(true)\r\n        \r\n                }else if(!likeList.includes(chatRoom.id)){\r\n        \r\n                    setLiked(false)\r\n        \r\n                }\r\n\r\n            }\r\n        \r\n        }\r\n\r\n    }, [chatRoom, liked, likeList])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(isChange){\r\n\r\n            db\r\n            .collection(\"User\")\r\n            .doc(user.id)\r\n            .update({\r\n    \r\n                favouriteChat: likeList\r\n    \r\n            })\r\n            .then(()=>console.log(\"updated like status\"))\r\n            .catch(err=>console.log(err))\r\n\r\n            setIsChange(false)\r\n\r\n        }\r\n\r\n    }, [liked, likeList, isChange])\r\n\r\n    const handle_liked = () => {\r\n\r\n        if(liked){\r\n\r\n            let newList = likeList\r\n            newList = newList.filter(id => id !== chatRoom.id)\r\n            setLikeList(newList)\r\n            setLiked(false)\r\n\r\n        }else{\r\n\r\n            let newList = likeList\r\n            newList.push(chatRoom.id)\r\n            setLikeList(newList)            \r\n\r\n            setLiked(true)\r\n\r\n        }\r\n\r\n        setIsChange(true)\r\n\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(typeof chatRoom === 'undefined' && params.id || params.id !== id){\r\n\r\n            getChatroom();\r\n            \r\n        }\r\n        \r\n        if(typeof user === 'undefined'){\r\n\r\n            getUser();\r\n\r\n        }\r\n\r\n\r\n    }, [chatRoom, user, params.id])\r\n\r\n\r\n    if(!currentUser){\r\n          \r\n        history.push('/')\r\n\r\n    }else{\r\n        return (\r\n            <div className=\"chatRoom\">\r\n                {\r\n\r\n                    params.type === \"chat\" ?\r\n                    <>\r\n                    <div className=\"chatRoom__titleBar\">\r\n                        {\r\n\r\n                            typeof chatRoom !== 'undefined' && params.id &&\r\n                            <>\r\n                                <div className=\"chatRoom__avatar\">\r\n                                    <img src={chatRoom.chatIcon} />\r\n                                </div>\r\n                                <div className=\"chatRoom__detail\">\r\n                                    <div>\r\n                                        <div className=\"chatRoom__title\">\r\n                                            {chatRoom.chatroomTitle}\r\n                                        </div>\r\n                                        {/* <div className=\"chatRoom__lastSeem\">\r\n                                            Last seem at 21 Jul 2021 14:30\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"chatRoom__buttons\">\r\n                                    <Button className=\"chatRoom__button\" style={{background: liked? \"white\":\"transparent\", color: liked? \"orange\": \"white\"}} onClick={handle_liked}>\r\n                                        <FontAwesomeIcon icon={faHeart} />\r\n                                    </Button>\r\n                                    <Button className=\"chatRoom__button\" onClick={()=>{goto_info()}}>\r\n                                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n\r\n                        }\r\n                    </div>\r\n                    <div className=\"chatRoom__chatContainer\">\r\n                        <ChatBox user={user} id={id}/>\r\n                    </div>\r\n                    </>\r\n                    :\r\n                    \"\"\r\n\r\n                }\r\n\r\n                {\r\n\r\n                    params.type === \"info\" ?\r\n                    <>\r\n                        <InfoBox chatRoom={chatRoom} user={user} />\r\n                    </>\r\n                    :\r\n                    \"\"\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatRoom\r\n","import React from 'react'\r\nimport './ChatContainer.scss'\r\n\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport ChatRoom from './ChatRoom/ChatRoom'\r\n\r\nfunction ChatContainer() {\r\n    return (\r\n        <div className=\"chatContainer\">\r\n            <Sidebar />\r\n            <ChatRoom />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport './SettingContainer.scss'\r\n\r\nimport Firebase from '../../../Config/firebase'\r\n\r\nfunction SettingContainer() {\r\n\r\n    const db = Firebase.firestore()\r\n    const currentUser = Firebase.auth().currentUser\r\n\r\n    const [user, setUser] = useState()\r\n    const [name, setName] = useState()\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [length, setLength] = useState()\r\n\r\n    const getUser = () => {\r\n\r\n        if(currentUser){\r\n\r\n            db\r\n            .collection('User')\r\n            .doc(currentUser.uid)\r\n            .get()\r\n            .then(doc => {\r\n\r\n                if(!doc.empty){\r\n\r\n                    setUser({id: doc.id, ...doc.data()})\r\n                    setName(doc.data().userName)\r\n                    setLength(doc.data().userName.length)\r\n\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handle_reset = () => {\r\n\r\n        setName(user.userName)\r\n\r\n    }\r\n\r\n    const handle_update = () => {\r\n\r\n        if(length !== 0 && isValid){\r\n            \r\n            db\r\n            .collection(\"User\")\r\n            .doc(user.id)\r\n            .update({\r\n    \r\n                userName: name,\r\n                avatarUrl: `https://avatars.dicebear.com/api/initials/${name}.svg`\r\n    \r\n            })\r\n            .catch(err=>console.log(err))\r\n            getUser()\r\n            setName(name)\r\n            setLength(name.length)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const checkValid = (name) => {\r\n\r\n        db\r\n        .collection(\"User\")\r\n        .where('userName', '==', name)\r\n        .get()\r\n        .then(docs=>{\r\n\r\n            if(!docs.empty){\r\n\r\n                setIsValid(false)\r\n\r\n            }else {\r\n\r\n                setIsValid(true)\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(typeof user === 'undefined'){\r\n\r\n            getUser();\r\n            \r\n        }\r\n    }, [user])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(name){\r\n\r\n            checkValid(name);\r\n\r\n        }\r\n\r\n    }, [name])\r\n\r\n    return (\r\n        <div className=\"settingContainer\">\r\n            {\r\n\r\n                typeof user != 'undefined'?\r\n                <>\r\n                    <h1>Setting</h1>\r\n\r\n                    <div className=\"settingContainer__avatar\">\r\n                        <img src={user.avatarUrl? user.avatarUrl:''} alt=\"\" />\r\n                    </div>\r\n\r\n                    <form action=\"\" className=\"settingContainer__form\">\r\n                        <label htmlFor=\"name\">User Name</label>\r\n                        <input type=\"text\" value={name} onChange={e=>{setName(e.target.value); setLength(e.target.value.length)}}/>\r\n                        {\r\n                            !isValid && user.userName !== name?\r\n                            <p style={{color: \"red\"}}>This user name has already existed</p>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                        {\r\n\r\n                            length == 0 ? \r\n                            <p style={{color: \"red\"}}>User name should not be empty</p>\r\n                            :\r\n                            \"\"\r\n\r\n                        }\r\n                        <div>\r\n                            <button className=\"settingContainer__btn reset\" onClick={()=>handle_reset()}>Reset</button>\r\n                            <button className={`settingContainer__btn ${!isValid && \"disable\"}`} onClick={()=> isValid? handle_update(): \"\"}>Update</button>\r\n                        </div>\r\n                    </form>\r\n                </>\r\n                :\r\n                <h1>Loading</h1>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingContainer\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './DashboardPage.scss'\r\n\r\nimport Toolbar from '../../components/Toolbar/Toolbar'\r\n\r\nimport ChatContainer from '../Layout/ChatContainer/ChatContainer'\r\nimport SettingContainer from '../Layout/SettingContainer/SettingContainer'\r\n\r\nfunction DashboardPage() {\r\n    return (\r\n        <div className=\"dashboardPage\">\r\n            <Router>\r\n                <Toolbar />\r\n                <Switch>\r\n                    <Route path=\"/dashboard/setting\" component={SettingContainer} exact/>\r\n                    <Route path=\"/dashboard/:type/:id?\" component={ChatContainer} />\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/' component={LoginPage} exact/>\n          <Route path='/dashboard' component={DashboardPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}